<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>科学君的不科学博客</title>
  
  <subtitle>by 不科学的科学君</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liu233w.github.io/"/>
  <updated>2018-04-02T07:39:03.942Z</updated>
  <id>https://liu233w.github.io/</id>
  
  <author>
    <name>Liu233w</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vim 在插入模式下粘贴的方法</title>
    <link href="https://liu233w.github.io/2018/04/02/vim-paste-in-command/"/>
    <id>https://liu233w.github.io/2018/04/02/vim-paste-in-command/</id>
    <published>2018-04-02T03:47:24.000Z</published>
    <updated>2018-04-02T07:39:03.942Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;有时候我们需要在Vim的 command line （命令窗口、ex命令）进行粘贴，比如：&lt;br&gt;&lt;img src=&quot;1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个状态下我们显然不能用 &lt;code&gt;p&lt;/code&gt; 来粘贴，而且在我的电脑上使用
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="Vim" scheme="https://liu233w.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>ABP 通知系统数据表结构及源码分析</title>
    <link href="https://liu233w.github.io/2018/04/02/abp23-notification/"/>
    <id>https://liu233w.github.io/2018/04/02/abp23-notification/</id>
    <published>2018-04-02T02:52:38.000Z</published>
    <updated>2018-04-02T07:39:03.942Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这篇文章接着 &lt;a href=&quot;/2018/03/27/abp11/&quot;&gt;在 ABP 2.3 和 Vue 单页应用中的踩坑总结&lt;/a&gt;
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="Web 开发" scheme="https://liu233w.github.io/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Asp.Net" scheme="https://liu233w.github.io/tags/Asp-Net/"/>
    
      <category term="AspNetBoilerplate" scheme="https://liu233w.github.io/tags/AspNetBoilerplate/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL：BFF架构资料 （兼谈合并多个 Schema 的方式）</title>
    <link href="https://liu233w.github.io/2018/03/30/graphql-merge-schema/"/>
    <id>https://liu233w.github.io/2018/03/30/graphql-merge-schema/</id>
    <published>2018-03-30T13:21:09.000Z</published>
    <updated>2018-03-31T03:42:28.384Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近正打算做 &lt;a href=&quot;http://new.npuacm.info&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://new.npuacm.info&lt;/a&gt; 的后端，研究了一下
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="Web 开发" scheme="https://liu233w.github.io/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>在 ABP 2.3 和 Vue 单页应用中的踩坑总结</title>
    <link href="https://liu233w.github.io/2018/03/27/abp11/"/>
    <id>https://liu233w.github.io/2018/03/27/abp11/</id>
    <published>2018-03-27T08:43:36.000Z</published>
    <updated>2018-03-31T08:49:44.912Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;离 &lt;a href=&quot;http://acm.nwpu.edu.cn&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="Web 开发" scheme="https://liu233w.github.io/tags/Web-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Asp.Net" scheme="https://liu233w.github.io/tags/Asp-Net/"/>
    
      <category term="Vue" scheme="https://liu233w.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>从 EGO 切换到 hexo</title>
    <link href="https://liu233w.github.io/2018/03/25/switch-to-hexo/"/>
    <id>https://liu233w.github.io/2018/03/25/switch-to-hexo/</id>
    <published>2018-03-25T14:56:48.000Z</published>
    <updated>2018-03-31T03:42:17.540Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我刚刚打算写一篇博文，结果发现我的 ego
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
      <category term="前端" scheme="https://liu233w.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="python" scheme="https://liu233w.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Nuxt+Jest 构建页面级的快照测试</title>
    <link href="https://liu233w.github.io/2018/03/25/nuxt-jest-snapshot/"/>
    <id>https://liu233w.github.io/2018/03/25/nuxt-jest-snapshot/</id>
    <published>2018-03-24T16:00:00.000Z</published>
    <updated>2018-03-25T15:17:15.656Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我最近的一个网站用到了 Vue 的 nuxtjs 框架，这个框架的&lt;a
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="前端" scheme="https://liu233w.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="https://liu233w.github.io/tags/vue/"/>
    
      <category term="jest" scheme="https://liu233w.github.io/tags/jest/"/>
    
  </entry>
  
  <entry>
    <title>SpaceShift 在实际使用中的问题</title>
    <link href="https://liu233w.github.io/2017/05/12/space-as-shift.org/"/>
    <id>https://liu233w.github.io/2017/05/12/space-as-shift.org/</id>
    <published>2017-05-11T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;几个月之前，我读到了一篇关于提高键盘上键位利用率的文章（虽然网址现在已经找不到 了）。上面提到可以将空格键和 shift 合体来使用。在单独按下空格的时候是空格键，空格 和其他功能键（比如字母和数字之类的）一起按的时候会起到 shift 键的功能。这样的话可
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="键盘" scheme="https://liu233w.github.io/tags/%E9%94%AE%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>WSL(Windows Subsystem for Linux) 提示找不到某程序的可能原因</title>
    <link href="https://liu233w.github.io/2017/05/12/wsl-bash.org/"/>
    <id>https://liu233w.github.io/2017/05/12/wsl-bash.org/</id>
    <published>2017-05-11T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天我久违的打开了 WSL，结果发现它报了一个奇怪的错误：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\WINDOWS\system32&amp;gt; bash
bash.exe&amp;quot;-3.1$ apt-get --version
bash.exe&amp;quot;:
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="windows" scheme="https://liu233w.github.io/tags/windows/"/>
    
      <category term="wsl" scheme="https://liu233w.github.io/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>在 windows 下使用计划任务来启动卡巴斯基杀毒软件的正确姿势</title>
    <link href="https://liu233w.github.io/2017/04/13/run-kaspersky-by-schedule.org/"/>
    <id>https://liu233w.github.io/2017/04/13/run-kaspersky-by-schedule.org/</id>
    <published>2017-04-12T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;最近我又有了一个奇葩的需求，需要在计划任务里面启动卡巴斯基杀毒软件。然而很快我发 现，没办法通过把可执行文件路径直接放进计划任务的“启动程序”里面的方式来启动它。 如果这样的话，启动计划任务时只会在后台启动一个进程，软件的图标甚至不会出现在托盘 区里面。即使把启动命令改成
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="windows" scheme="https://liu233w.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>SICP 1.16 题 题解</title>
    <link href="https://liu233w.github.io/2017/02/24/sicp-1-16.org/"/>
    <id>https://liu233w.github.io/2017/02/24/sicp-1-16.org/</id>
    <published>2017-02-23T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;题目描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;源代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刚刚做出来 sicp 里的 1.16
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="sicp" scheme="https://liu233w.github.io/tags/sicp/"/>
    
  </entry>
  
  <entry>
    <title>windows 下用来快速启动 emacs client 的脚本</title>
    <link href="https://liu233w.github.io/2016/11/15/windows-emacs-cmd.org/"/>
    <id>https://liu233w.github.io/2016/11/15/windows-emacs-cmd.org/</id>
    <published>2016-11-14T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;我一直在 windows 下使用 emacs 的 client 模式。但是有一件事情让我非常的不爽，就是有时候 emacs server 在关闭之后不会自动清除掉 server 文件，导致下次打开的时候也不会用新的 server 文件覆盖原来的，令 client
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
  </entry>
  
  <entry>
    <title>解决 Emacs 的 Python 交互执行环境在 windows 下无法显示中文的问题</title>
    <link href="https://liu233w.github.io/2016/09/29/org-python-windows.org/"/>
    <id>https://liu233w.github.io/2016/09/29/org-python-windows.org/</id>
    <published>2016-09-28T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;问题描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;org-babel 的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
      <category term="org" scheme="https://liu233w.github.io/tags/org/"/>
    
      <category term="windows" scheme="https://liu233w.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>执行当前 buffer 中的源代码</title>
    <link href="https://liu233w.github.io/2016/09/21/run-current-file.org/"/>
    <id>https://liu233w.github.io/2016/09/21/run-current-file.org/</id>
    <published>2016-09-20T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;正文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;TIPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
  </entry>
  
  <entry>
    <title>在 windows 下使用快捷键安全快速地移除 USB 设备</title>
    <link href="https://liu233w.github.io/2016/09/19/remove-usb.org/"/>
    <id>https://liu233w.github.io/2016/09/19/remove-usb.org/</id>
    <published>2016-09-18T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;序言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;一个脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot;
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="windows" scheme="https://liu233w.github.io/tags/windows/"/>
    
      <category term="usb" scheme="https://liu233w.github.io/tags/usb/"/>
    
      <category term="ahk" scheme="https://liu233w.github.io/tags/ahk/"/>
    
  </entry>
  
  <entry>
    <title>在 spacemacs 生成 micro-state 的同时为每个命令生成对应的执行并进入 micro-state 的函数</title>
    <link href="https://liu233w.github.io/2016/09/02/multiple-micro-state.org/"/>
    <id>https://liu233w.github.io/2016/09/02/multiple-micro-state.org/</id>
    <published>2016-09-01T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;我的实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;使用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
      <category term="spacemacs" scheme="https://liu233w.github.io/tags/spacemacs/"/>
    
  </entry>
  
  <entry>
    <title>在 windows 下使用 clang（不需要重新编译）</title>
    <link href="https://liu233w.github.io/2016/08/30/clang-windows.org/"/>
    <id>https://liu233w.github.io/2016/08/30/clang-windows.org/</id>
    <published>2016-08-29T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;如何让 clang 使用 visual studio 2015 的头文件和链接器而不重新编译 clang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
      <category term="clang" scheme="https://liu233w.github.io/tags/clang/"/>
    
      <category term="LLVM" scheme="https://liu233w.github.io/tags/LLVM/"/>
    
  </entry>
  
  <entry>
    <title>使用 org 的文件名作为 EGO 生成的 URL</title>
    <link href="https://liu233w.github.io/2016/08/22/change-url-generator.org/"/>
    <id>https://liu233w.github.io/2016/08/22/change-url-generator.org/</id>
    <published>2016-08-21T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;改进方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;16/8/23
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="EGO" scheme="https://liu233w.github.io/tags/EGO/"/>
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
  </entry>
  
  <entry>
    <title>写了一个 emacs package：number-lock.el</title>
    <link href="https://liu233w.github.io/2016/08/21/programming-mode.org/"/>
    <id>https://liu233w.github.io/2016/08/21/programming-mode.org/</id>
    <published>2016-08-20T16:00:00.000Z</published>
    <updated>2018-03-25T14:48:19.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;项目简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;另一种实现方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;16/8/30 更新&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;项目简介&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="blog" scheme="https://liu233w.github.io/categories/blog/"/>
    
    
      <category term="emacs" scheme="https://liu233w.github.io/tags/emacs/"/>
    
      <category term="emacs package" scheme="https://liu233w.github.io/tags/emacs-package/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1330 Nearest Common Ancestors</title>
    <link href="https://liu233w.github.io/2016/08/20/poj-1330.org/"/>
    <id>https://liu233w.github.io/2016/08/20/poj-1330.org/</id>
    <published>2016-08-19T16:00:00.000Z</published>
    <updated>2018-03-25T14:26:29.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;题目：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sec-&quot;&gt;解析&amp;amp;吐槽：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="acm" scheme="https://liu233w.github.io/categories/acm/"/>
    
    
      <category term="acm" scheme="https://liu233w.github.io/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>OJ 中使用 fread 加速读入</title>
    <link href="https://liu233w.github.io/2016/08/20/fread.org/"/>
    <id>https://liu233w.github.io/2016/08/20/fread.org/</id>
    <published>2016-08-19T16:00:00.000Z</published>
    <updated>2018-03-25T14:26:29.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;关于 fread 加速读入的说明请参考 &lt;a
        
      
    
    </summary>
    
      <category term="acm" scheme="https://liu233w.github.io/categories/acm/"/>
    
    
      <category term="acm" scheme="https://liu233w.github.io/tags/acm/"/>
    
  </entry>
  
</feed>
